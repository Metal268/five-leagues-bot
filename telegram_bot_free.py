import asyncio
import telegram
import feedparser
import os

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
TELEGRAM_TOKEN = os.getenv('TELEGRAM_TOKEN', '7578141836:AAGj_be7DOaq0wT-RL53gVDFEn_ZZMDNCXM')
CHAT_ID = os.getenv('CHAT_ID', '8142520596')
CHANNEL_ID = os.getenv('CHANNEL_ID', '@fiveleagues')  # –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è, —â–æ —Ü–µ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π ID –∫–∞–Ω–∞–ª—É

# RSS-—Å—Ç—Ä—ñ—á–∫–∏ –¥–ª—è —Ç–æ–ø-5 –ª—ñ–≥ –Ñ–≤—Ä–æ–ø–∏
RSS_FEEDS = [
    'http://feeds.bbci.co.uk/sport/football/premier-league/rss.xml',  # –ê–ü–õ (–ê–Ω–≥–ª—ñ—è)
    'https://e00-marca.uecdn.es/rss/futbol/primera-division.xml',     # –õ–∞ –õ—ñ–≥–∞ (–Ü—Å–ø–∞–Ω—ñ—è)
    'https://www.gazzetta.it/rss/Xml/calcio.xml',                    # –°–µ—Ä—ñ—è –ê (–Ü—Ç–∞–ª—ñ—è)
    'https://www.kicker.de/bundesliga/rss',                          # –ë—É–Ω–¥–µ—Å–ª—ñ–≥–∞ (–ù—ñ–º–µ—á—á–∏–Ω–∞)
    'https://www.lequipe.fr/rss/football.xml'                        # –õ—ñ–≥–∞ 1 (–§—Ä–∞–Ω—Ü—ñ—è)
]

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = telegram.Bot(token=TELEGRAM_TOKEN)

# –Ü–≥–Ω–æ—Ä—É–≤–∞–Ω–Ω—è –ø–æ—Ä—Ç—É –¥–ª—è Render
os.environ['PORT'] = '0'

async def fetch_news():
    news = []
    for feed in RSS_FEEDS:
        feed_data = feedparser.parse(feed)
        for entry in feed_data.entries[:1]:  # –ë–µ—Ä–µ–º–æ –ª–∏—à–µ –æ–¥–Ω—É –Ω–æ–≤–∏–Ω—É –∑ –∫–æ–∂–Ω–æ—ó —Å—Ç—Ä—ñ—á–∫–∏
            news.append({
                'title': entry.title,
                'summary': entry.summary,
                'link': entry.link
            })
    return news

async def format_final_post(news_item):
    # –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–π –ø–æ—Å—Ç –∑–∞ –ø—Ä–∏–∫–ª–∞–¥–æ–º
    title = news_item['title']
    summary = news_item['summary'].replace('<p>', '').replace('</p>', '')[:250]
    
    # –ü–æ–∫–∏ placeholder –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—è (–º–æ–∂–Ω–∞ –æ–Ω–æ–≤–∏—Ç–∏ –ø—ñ–∑–Ω—ñ—à–µ)
    stats = """
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–ø—Ä–∏–∫–ª–∞–¥):
‚ñ™Ô∏è 15 –≥–æ–ª—ñ–≤
‚ñ™Ô∏è 8 –∞—Å–∏—Å—Ç—ñ–≤
‚ñ™Ô∏è –ù–∞–π–±—ñ–ª—å—à–µ —É–¥–∞—Ä—ñ–≤ —É –ª—ñ–∑—ñ (117)
‚ñ™Ô∏è 2-–π –∑–∞ –æ—á—ñ–∫—É–≤–∞–Ω–∏–º–∏ –≥–æ–ª–∞–º–∏ (xG = 21.6)
"""
    comment = """
üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä –µ–∫—Å–ø–µ—Ä—Ç–∞:
¬´–¢–∞–∫—Ç–∏—á–Ω–æ –≥–Ω—É—á–∫–∏–π, —Ä–æ–∑—É–º–Ω–∏–π, –¥–æ–±—Ä–µ –¥—ñ—î –≤ –ø—Ä–µ—Å–∏–Ω–≥—É.¬ª
"""
    additional_info = """
üìå –©–æ —â–µ –≤—ñ–¥–æ–º–æ:
‚ñ™Ô∏è –î–µ—Ç–∞–ª—ñ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä—É —É—Ç–æ—á–Ω—é—é—Ç—å—Å—è
"""

    return f"""
üî¥ *{title}*

{summary}...

{stats}
{comment}
{additional_info}

#–ê–ü–õ #–õ–∞–õ—ñ–≥–∞ #–°–µ—Ä—ñ—è–ê #–ë—É–Ω–¥–µ—Å–ª—ñ–≥–∞ #–õ—ñ–≥–∞1
"""

async def send_news_to_user():
    news = await fetch_news()
    for item in news:
        final_post = await format_final_post(item)
        keyboard = [
            [{"text": "‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏", "callback_data": "confirm"},
             {"text": "‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏", "callback_data": "decline"},
             {"text": "‚úçÔ∏è –í–∏–ø—Ä–∞–≤–∏—Ç–∏", "callback_data": "edit"}]
        ]
        reply_markup = telegram.InlineKeyboardMarkup(keyboard)
        message = await bot.send_message(chat_id=CHAT_ID, text=final_post, reply_markup=reply_markup, parse_mode='Markdown')
        # –†—É—á–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫
        offset = 0
        while True:
            updates = await bot.get_updates(offset=offset, timeout=10)
            for update in updates:
                if update.callback_query and update.callback_query.message.message_id == message.message_id:
                    query = update.callback_query
                    await query.answer()
                    if query.data == "confirm":
                        await bot.send_message(chat_id=CHANNEL_ID, text=final_post, parse_mode='Markdown')
                        await query.edit_message_text("‚úÖ –û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ –≤ @fiveleagues!")
                    elif query.data == "decline":
                        await query.edit_message_text("‚ùå –í—ñ–¥—Ö–∏–ª–µ–Ω–æ.")
                    elif query.data == "edit":
                        await query.edit_message_text("‚úçÔ∏è –í–≤–µ–¥–∏ –Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.")
                    offset = update.update_id + 1
                    return  # –í–∏—Ö—ñ–¥ –ø—ñ—Å–ª—è –æ–±—Ä–æ–±–∫–∏
            await asyncio.sleep(1)  # –ü–∞—É–∑–∞, —â–æ–± –Ω–µ –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂—É–≤–∞—Ç–∏ API

async def main():
    while True:
        await send_news_to_user()
        await asyncio.sleep(3600)  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É

if __name__ == '__main__':
    asyncio.run(main())
